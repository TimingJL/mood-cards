{"version":3,"sources":["assets/images/taiwan-national-flag.png","assets/images/amen-boom_01.png","assets/images/amen-yellow-outlined.png","assets/images/word-is-best_01.png","assets/images/thanks-lord.png","assets/images/triple-great.png","assets/images/i-love-you.png","assets/images/pink-heart.png","data/cards.ts","assets/images/lord-is-the-best.png","pages/mainCard/index.tsx","components/sideMenu/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Cards","key","text","imagePath","tripleGreat","backgroundColor","amenBoom01","amenYellowOutlined","wordIsBest01","thanksLord","iLoveYou","pinkHeart","taiwanNationalFlag","useStyles","makeStyles","root","props","background","height","display","alignItems","justifyContent","overflow","image","isHorizontal","maxWidth","maxHeight","width","MainCard","selectedCardKey","useState","windowSize","setWindowSize","foundCard","find","card","classes","handleOnResize","window","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","className","src","alt","list","marginRight","selected","content","position","top","left","SideMenu","isOpen","handleOnClose","handleSelectCard","Drawer","anchor","open","onClose","List","map","isSelected","ListItem","button","clsx","onClick","ListItemText","primary","defaultCards","theme","minHeight","appBar","iconButton","margin","color","App","isOpenMenu","setIsOpenMenu","setSelectedCardKey","IconButton","aria-label","size","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"8LAAe,MAA0B,iDCA1B,MAA0B,yCCA1B,MAA0B,iDCA1B,MAA0B,4CCA1B,MAA0B,wCCA1B,MAA0B,yCCA1B,MAA0B,uCCA1B,MAA0B,uCCY5BA,EAAQ,CACpB,CACCC,IAAK,cACLC,KAAM,qBACNC,UAAWC,EACXC,gBAAiB,WAElB,CACCJ,IAAK,eACLC,KAAM,kBACNC,UAAWG,EACXD,gBAAiB,WAElB,CACCJ,IAAK,uBACLC,KAAM,kBACNC,UAAWI,EACXF,gBAAiB,WAElB,CACCJ,IAAK,kBACLC,KAAM,2BACNC,UAAWK,EACXH,gBAAiB,WAElB,CACCJ,IAAK,mBACLC,KAAM,qBACNC,UCxCa,IAA0B,6CDyCvCE,gBAAiB,WAElB,CACCJ,IAAK,cACLC,KAAM,qBACNC,UAAWM,EACXJ,gBAAiB,WAElB,CACCJ,IAAK,aACLC,KAAM,qBACNC,UAAWO,EACXL,gBAAiB,WAElB,CACCJ,IAAK,aACLC,KAAM,4BACNC,UAAWQ,EACXN,gBAAiB,WAElB,CACCJ,IAAK,uBACLC,KAAM,2BACNC,UAAWS,EACXP,gBAAiB,Y,OEtDbQ,EAAYC,aAAW,iBAAO,CACnCC,KAAM,SAACC,GAAD,MAAyB,CAC9BC,WAAYD,EAAMX,gBAClBa,OAAQ,QACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,SAAU,WAEXC,MAAO,YACN,OADyC,EAAhCC,aAEA,CACPC,SAAU,OACVP,OAAQ,QAGF,CACPQ,UAAW,OACXC,MAAO,aA2CKC,EAlCE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,gBACnB,EAAoCC,mBAAS,CAC5CH,MAAO,EACPT,OAAQ,IAFT,mBAAOa,EAAP,KAAmBC,EAAnB,KAIMR,EAAeO,EAAWJ,MAAQI,EAAWb,OAC7Ce,EAAYjC,EAAMkC,MAAK,SAACC,GAAD,OAAUA,EAAKlC,MAAQ4B,KAC9CO,EAAUvB,EAAU,CACzBW,eACAnB,gBAAiB4B,EAAU5B,kBAGtBgC,EAAiB,WACtBL,EAAc,CACbL,MAAOW,OAAOC,WACdrB,OAAQoB,OAAOE,eAYjB,OARAC,qBAAU,WAGT,OAFAJ,IACAC,OAAOI,iBAAiB,SAAUL,GAC3B,WACNC,OAAOK,oBAAoB,SAAUN,MAEpC,IAGF,qBAAKO,UAAWR,EAAQrB,KAAxB,SACC,qBAAK8B,IAAKZ,EAAU9B,UAAW2C,IAAI,GAAGF,UAAWR,EAAQb,W,gECzDtDV,EAAYC,YAAW,CAC3BiC,KAAM,CACJpB,MAAO,KAEVJ,MAAO,CACNI,MAAO,GACPT,OAAQ,OACR8B,YAAa,GAEdC,SAAU,CACThC,WAAY,UACZ,UAAW,CACVA,WAAY,WAEb,YAAa,CACZiC,QAAS,KACTC,SAAU,WACVC,IAAK,EACLC,KAAM,EACN1B,MAAO,EACPT,OAAQ,OACRD,WAAY,cA+CAqC,EAnCE,SAAC,GAEW,IAD5BC,EAC2B,EAD3BA,OAAQ1B,EACmB,EADnBA,gBAAiB2B,EACE,EADFA,cAAeC,EACb,EADaA,iBAEjCrB,EAAUvB,IAEhB,OACA,cAAC6C,EAAA,EAAD,CAAQC,OAAQ,QAASC,KAAML,EAAQM,QAASL,EAAhD,SACC,qBAAKZ,UAAWR,EAAQW,KAAxB,SACC,cAACe,EAAA,EAAD,UACE9D,EAAM+D,KAAI,YAMJ,IALN9D,EAKK,EALLA,IAAKE,EAKA,EALAA,UAAWD,EAKX,EALWA,KAMV8D,EAAa/D,IAAQ4B,EAC3B,OACC,eAACoC,EAAA,EAAD,CACCC,QAAM,EAENtB,UAAWuB,YAAKH,GAAc5B,EAAQa,UACtCmB,QAAS,kBAAMX,EAAiB,CAAExD,SAJnC,UAMC,qBAAK4C,IAAK1C,EAAW2C,IAAI,GAAGF,UAAWR,EAAQb,QAC/C,cAAC8C,EAAA,EAAD,CAAcC,QAASpE,MALlBD,aCtDPsE,EAAevE,EAAM,GAErBa,EAAYC,aAAW,SAAC0D,GAAD,MAAY,CACvCzD,KAAM,CACJE,WAAY,OACdwD,UAAW,QACXvD,OAAQ,OACRiC,SAAU,YAEXuB,OAAQ,CACPvB,SAAU,WACVE,KAAM,EACN1B,MAAO,QACPR,QAAS,OACTE,eAAgB,YAEjBsD,WAAY,CACXC,OAAQ,WACRC,MAAO,iBAsCMC,EAlCH,WACX,IAAM1C,EAAUvB,IAChB,EAAoCiB,oBAAS,GAA7C,mBAAOiD,EAAP,KAAmBC,EAAnB,KACA,EAA8ClD,mBAASyC,EAAatE,KAApE,mBAAO4B,EAAP,KAAwBoD,EAAxB,KAOC,OACA,qCACC,sBAAKrC,UAAWR,EAAQrB,KAAxB,UACC,qBAAK6B,UAAWR,EAAQsC,OAAxB,SACC,cAACQ,EAAA,EAAD,CACCC,aAAW,OACXvC,UAAWR,EAAQuC,WAAYS,KAAK,SACpChB,QAAS,kBAAMY,GAAc,IAH9B,SAKC,cAAC,IAAD,QAGF,cAAC,EAAD,CAAUnD,gBAAiBA,OAE5B,cAAC,EAAD,CACC0B,OAAQwB,EACRlD,gBAAiBA,EACjB2B,cAAe,kBAAMwB,GAAc,IACnCvB,iBAvBsB,SAAC,GAA8B,IAA5BxD,EAA2B,EAA3BA,IAC3BgF,EAAmBhF,GACnB+E,GAAc,UC1BVK,EAAcC,QACW,cAA7BhD,OAAOiD,SAASC,UAEe,UAA7BlD,OAAOiD,SAASC,UAEhBlD,OAAOiD,SAASC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SFgBnB,SAAkB7B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6B,IAAIC,cAAwBrF,OAAOiD,SAASqC,MACpDC,SAAWvF,OAAOiD,SAASsC,OAIvC,OAGFvF,OAAOI,iBAAiB,QAAQ,WAC9B,IAAMiD,EAAK,UAAMgC,cAAN,sBAEPtC,IAgEV,SAAiCM,EAAeC,GAE9CkC,MAAMnC,EAAO,CACXoC,QAAS,CAAE,iBAAkB,YAE5B/B,MAAK,SAACgC,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CvC,UAAUC,cAAcuC,MAAMrC,MAAK,SAACC,GAClCA,EAAaqC,aAAatC,MAAK,WAC7B1D,OAAOiD,SAASgD,eAKpB7C,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFV+B,CAAwB7C,EAAOC,GAI/BC,UAAUC,cAAcuC,MAAMrC,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OEtC/B6C,GAKA3B,M","file":"static/js/main.07c32c50.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/taiwan-national-flag.b64ddc98.png\";","export default __webpack_public_path__ + \"static/media/amen-boom_01.9c92b1a0.png\";","export default __webpack_public_path__ + \"static/media/amen-yellow-outlined.19175e6a.png\";","export default __webpack_public_path__ + \"static/media/word-is-best_01.8dc5cb18.png\";","export default __webpack_public_path__ + \"static/media/thanks-lord.6778848e.png\";","export default __webpack_public_path__ + \"static/media/triple-great.02eb47c5.png\";","export default __webpack_public_path__ + \"static/media/i-love-you.f277c8ca.png\";","export default __webpack_public_path__ + \"static/media/pink-heart.aeea5fd8.png\";","import { ICardItem } from 'src/types/card';\n\nimport taiwanNationalFlag from '../assets/images/taiwan-national-flag.png';\nimport amenBoom01 from '../assets/images/amen-boom_01.png';\nimport amenYellowOutlined from '../assets/images/amen-yellow-outlined.png';\nimport wordIsBest01 from '../assets/images/word-is-best_01.png';\nimport thanksLord from '../assets/images/thanks-lord.png';\nimport tripleGreat from '../assets/images/triple-great.png';\nimport iLoveYou from '../assets/images/i-love-you.png';\nimport pinkHeart from '../assets/images/pink-heart.png';\nimport lordIsTheBest from '../assets/images/lord-is-the-best.png';\n\nexport const Cards = [\n\t{\n\t\tkey: 'tripleGreat',\n\t\ttext: '讚讚讚',\n\t\timagePath: tripleGreat,\n\t\tbackgroundColor: '#ffffff'\n\t},\n\t{\n\t\tkey: 'amen-boom_01',\n\t\ttext: '阿們_01',\n\t\timagePath: amenBoom01,\n\t\tbackgroundColor: '#ECC344'\n\t},\n\t{\n\t\tkey: 'amen-yellow-outlined',\n\t\ttext: '阿們_02',\n\t\timagePath: amenYellowOutlined,\n\t\tbackgroundColor: '#FCDB17'\n\t},\n\t{\n\t\tkey: 'word-is-best_01',\n\t\ttext: '話語最棒',\n\t\timagePath: wordIsBest01,\n\t\tbackgroundColor: '#69C2C2'\n\t},\n\t{\n\t\tkey: 'lord-is-the-best',\n\t\ttext: '主最棒',\n\t\timagePath: lordIsTheBest,\n\t\tbackgroundColor: '#F2F1F0'\n\t},\n\t{\n\t\tkey: 'thanks-lord',\n\t\ttext: '感謝主',\n\t\timagePath: thanksLord,\n\t\tbackgroundColor: '#ffffff'\n\t},\n\t{\n\t\tkey: 'i-love-you',\n\t\ttext: '我愛你',\n\t\timagePath: iLoveYou,\n\t\tbackgroundColor: '#F15268'\n\t},\n\t{\n\t\tkey: 'pink-heart',\n\t\ttext: '愛心-粉紅',\n\t\timagePath: pinkHeart,\n\t\tbackgroundColor: '#000000'\n\t},\n\t{\n\t\tkey: 'taiwan-national-flag',\n\t\ttext: '台灣國旗',\n\t\timagePath: taiwanNationalFlag,\n\t\tbackgroundColor: '#000000'\n\t},\n] as ICardItem[];\n","export default __webpack_public_path__ + \"static/media/lord-is-the-best.c2f1da64.png\";","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Cards } from 'src/data/cards';\nimport { ICardItem } from 'src/types/card';\n\ninterface IStyleProps {\n\tbackgroundColor: string;\n\tisHorizontal: boolean;\n}\n\nconst useStyles = makeStyles(() => ({\n\troot: (props: IStyleProps) => ({\n\t\tbackground: props.backgroundColor,\n\t\theight: '100vh',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\toverflow: 'hidden',\n\t}),\n\timage: ({ isHorizontal }: IStyleProps) => {\n\t\tif (isHorizontal) {\n\t\t\treturn ({\n\t\t\t\tmaxWidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t});\n\t\t}\n\t\treturn ({\n\t\t\tmaxHeight: '100%',\n\t\t\twidth: '100%',\n\t\t});\n\t}\n}));\n\ninterface IProps {\n\tselectedCardKey: string;\n}\n\nconst MainCard = ({ selectedCardKey }: IProps): JSX.Element => {\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: 0,\n\t\theight: 0,\n\t});\n\tconst isHorizontal = windowSize.width > windowSize.height;\n\tconst foundCard = Cards.find((card) => card.key === selectedCardKey) as ICardItem;\n\tconst classes = useStyles({\n\t\tisHorizontal,\n\t\tbackgroundColor: foundCard.backgroundColor,\n\t});\n\n\tconst handleOnResize = () => {\n\t\tsetWindowSize({\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight,\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\thandleOnResize();\n\t\twindow.addEventListener('resize', handleOnResize);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', handleOnResize);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<img src={foundCard.imagePath} alt=\"\" className={classes.image} />\n\t\t</div>\n\t);\n};\n\nexport default MainCard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { Cards } from 'src/data/cards';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n\timage: {\n\t\twidth: 48,\n\t\theight: 'auto',\n\t\tmarginRight: 8,\n\t},\n\tselected: {\n\t\tbackground: '#e5f6ff',\n\t\t'&:hover': {\n\t\t\tbackground: '#e5f6ff',\n\t\t},\n\t\t'&::before': {\n\t\t\tcontent: '\"\"',\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\twidth: 4,\n\t\t\theight: '100%',\n\t\t\tbackground: '#3ebeff'\n\t\t}\n\t}\n});\n\ninterface IProps {\n\tisOpen: boolean;\n\tselectedCardKey: string;\n\thandleOnClose: () => void;\n\thandleSelectCard: ({ key }: { key: string }) => void;\n}\n\nconst SideMenu = ({\n\tisOpen, selectedCardKey, handleOnClose, handleSelectCard\n}: IProps): JSX.Element =>  {\n  const classes = useStyles();\n\n  return (\n\t\t<Drawer anchor={'right'} open={isOpen} onClose={handleOnClose}>\n\t\t\t<div className={classes.list}>\n\t\t\t\t<List>\n\t\t\t\t\t{Cards.map(({\n\t\t\t\t\t\tkey, imagePath, text\n\t\t\t\t\t}: {\n\t\t\t\t\t\tkey: string;\n\t\t\t\t\t\timagePath: string;\n\t\t\t\t\t\ttext: string;\n\t\t\t\t\t}) => {\n\t\t\t\t\t\tconst isSelected = key === selectedCardKey;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tclassName={clsx(isSelected && classes.selected)}\n\t\t\t\t\t\t\t\tonClick={() => handleSelectCard({ key })}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img src={imagePath} alt=\"\" className={classes.image} />\n\t\t\t\t\t\t\t\t<ListItemText primary={text} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t</Drawer>\n  );\n}\n\nexport default SideMenu;\n","import React, { useState } from 'react';\nimport MainCard from './pages/mainCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SideMenu from './components/sideMenu';\nimport { Cards } from './data/cards';\n\nconst defaultCards = Cards[0];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: 'pink',\n\t\tminHeight: '100vh',\n\t\theight: '100%',\n\t\tposition: 'relative'\n  },\n\tappBar: {\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\twidth: '100vw',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-end',\n\t},\n\ticonButton: {\n\t\tmargin: '4px 16px',\n\t\tcolor: '#5c5c5c8a',\n\t}\n}));\n\nconst App = (): JSX.Element => {\n\tconst classes = useStyles();\n\tconst [isOpenMenu, setIsOpenMenu] = useState(false);\n\tconst [selectedCardKey, setSelectedCardKey] = useState(defaultCards.key);\n\n\tconst handleSelectCard = ({ key }: { key: string }) => {\n\t\tsetSelectedCardKey(key);\n\t\tsetIsOpenMenu(false);\n\t}\n\n  return (\n\t\t<>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.appBar}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\tclassName={classes.iconButton} size=\"medium\"\n\t\t\t\t\t\tonClick={() => setIsOpenMenu(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t\t<MainCard selectedCardKey={selectedCardKey} />\n\t\t\t</div>\n\t\t\t<SideMenu\n\t\t\t\tisOpen={isOpenMenu}\n\t\t\t\tselectedCardKey={selectedCardKey}\n\t\t\t\thandleOnClose={() => setIsOpenMenu(false)}\n\t\t\t\thandleSelectCard={handleSelectCard}\n\t\t\t/>\n\t\t</>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}